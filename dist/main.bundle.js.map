{"version":3,"sources":["./src/$_gendir lazy","./src/app/agmaps/agmaps.component.css","./src/app/agmaps/agmaps.component.html","./src/app/agmaps/agmaps.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/approve-survey/approve-survey.component.css","./src/app/approve-survey/approve-survey.component.html","./src/app/approve-survey/approve-survey.component.ts","./src/app/guards/auth-guard.ts","./src/app/layout-application/layout-application.component.css","./src/app/layout-application/layout-application.component.html","./src/app/layout-application/layout-application.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/logout/logout.component.css","./src/app/logout/logout.component.html","./src/app/logout/logout.component.ts","./src/app/models/LandRecord.ts","./src/app/services/file-upload.service.ts","./src/app/services/login-authentication.service.ts","./src/app/services/managelandrecords.service.ts","./src/app/services/survey-data.service.ts","./src/app/show-validation-error/show-validation-error.component.css","./src/app/show-validation-error/show-validation-error.component.html","./src/app/show-validation-error/show-validation-error.component.ts","./src/app/submit-layout-survey/submit-layout-survey.component.css","./src/app/submit-layout-survey/submit-layout-survey.component.html","./src/app/submit-layout-survey/submit-layout-survey.component.ts","./src/app/view-land-record/view-land-record.component.css","./src/app/view-land-record/view-land-record.component.html","./src/app/view-land-record/view-land-record.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"\\r\\nagm-map {\\r\\n  height: 200px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/agmaps/agmaps.component.css\n// module id = ./src/app/agmaps/agmaps.component.css\n// module chunks = main","module.exports = \"\\n<agm-map \\n  [latitude]=\\\"lat\\\"\\n  [longitude]=\\\"lng\\\"\\n  [zoom]=\\\"16\\\"\\n  [disableDefaultUI]=\\\"true\\\"\\n  [zoomControl]=\\\"true\\\">\\n\\n  <agm-marker \\n      [latitude]=\\\"lat\\\"\\n      [longitude]=\\\"lng\\\"\\n      [label]=\\\"\\\"\\n      [markerDraggable]=\\\"false\\\">\\n  </agm-marker>\\n</agm-map>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/agmaps/agmaps.component.html\n// module id = ./src/app/agmaps/agmaps.component.html\n// module chunks = main","import { Component, OnInit,Input } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-gmaps',\n  templateUrl: './agmaps.component.html',\n  styleUrls: ['./agmaps.component.css']\n})\nexport class GmapsComponent implements OnInit {\n  @Input() lat:number;\n  @Input() lng:number;\n  constructor(){\n  }\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/agmaps/agmaps.component.ts","import {LayoutApplicationComponent  } from './layout-application/layout-application.component';\r\nimport {SubmitLayoutSurveyComponent} from \"./submit-layout-survey/submit-layout-survey.component\";\r\nimport {ApproveSurveyComponent} from \"./approve-survey/approve-survey.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {NgModule } from '@angular/core';\r\nimport {Routes, RouterModule } from '@angular/router';\r\nimport {ViewlandrecordComponent } from './view-land-record/view-land-record.component';\r\nimport {AuthGuard} from './guards/auth-guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'submitLayoutSurvey', component: SubmitLayoutSurveyComponent,canActivate: [AuthGuard] },\r\n  { path: 'layoutApplication', component: LayoutApplicationComponent,canActivate: [AuthGuard] },\r\n  { path: 'layoutApplication/:id', component: LayoutApplicationComponent,canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'approveSurveys', component: ApproveSurveyComponent,canActivate: [AuthGuard] },\r\n  { path: 'viewLandRecord/:id', component: ViewlandrecordComponent,canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: '/login',pathMatch:'full'},\r\n  { path: '**', pathMatch:'full', redirectTo: '/login'}\r\n] \r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"/*add all css here */\\r\\n/*custom theme for bootswatch space-lab */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- This would embed the container class of bootstrap-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n<!-- Header Section starts here-->\\r\\n<header class=\\\"header_bg\\\">\\r\\n  <div class=\\\"header_left\\\"></div>\\r\\n  <div class=\\\"header_right\\\"></div>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"logo_pharma\\\"> <a href=\\\"#\\\"><img src=\\\"/assets/images/logo.png\\\" alt=\\\"logo\\\"/></a> </div>\\r\\n    <div class=\\\"banner_text_right\\\"> Blockchain for Business<br>\\r\\n      <b>WITH IBM BLOCKCHAIN</b> </div>\\r\\n  </div>\\r\\n</header>\\r\\n<!-- Header Section ends here--> \\r\\n<!-- Content Section starts here-->\\r\\n<router-outlet></router-outlet>\\r\\n<!-- Content Section ends here-->\\r\\n<!-- Footer Section starts here-->\\r\\n<footer class=\\\"footer\\\">©  copyright 2018</footer>\\r\\n<!-- Footer Section ends here--> \\r\\n</div>\\r\\n<script>\\r\\n$(document).ready(function(){\\r\\n    $(\\\".dropdown-toggle\\\").dropdown();\\r\\n});\\r\\n</script>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(private location: Location) { \n      var pathString = location.path();\n      console.log('appComponent: pathString...');\n      console.log(pathString);    \n      \n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { AppComponent } from './app.component';\nimport { ShowValidationErrorComponent } from './show-validation-error/show-validation-error.component';\nimport { LayoutApplicationComponent } from './layout-application/layout-application.component';\n\nimport { SurveyDataService } from './services/survey-data.service';\nimport { ManageLandRecordsService } from './services/managelandrecords.service'\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ApproveSurveyComponent } from './approve-survey/approve-survey.component';\nimport { GmapsComponent } from './agmaps/agmaps.component';\nimport { LoginComponent } from './login/login.component';\nimport { ViewlandrecordComponent } from './view-land-record/view-land-record.component';\nimport { AuthGuard } from './guards/auth-guard';\nimport { LoginAuthenticationService } from './services/login-authentication.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport{FileUploadService} from './services/file-upload.service';\nimport { SubmitLayoutSurveyComponent } from './submit-layout-survey/submit-layout-survey.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShowValidationErrorComponent,\n    LayoutApplicationComponent,\n    ApproveSurveyComponent,\n    GmapsComponent,\n    LoginComponent,\n    ViewlandrecordComponent,\n    LogoutComponent,\n    SubmitLayoutSurveyComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyCSIFuXPQXel1splGkx5ElXoU1bL60Jn-I' //credentials for Angular google maps\n    }), \n    AppRoutingModule\n    \n  ],\n  providers: [SurveyDataService,ManageLandRecordsService,AuthGuard,LoginAuthenticationService,FileUploadService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"/*CSS to come here */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/approve-survey/approve-survey.component.css\n// module id = ./src/app/approve-survey/approve-survey.component.css\n// module chunks = main","module.exports = \"<div class=\\\"title_banner\\\">\\n  <div class=\\\"container\\\" style=\\\"width:1230px;\\\">\\n    <h1>One click away for Land Registry</h1>\\n    <h2>Online Land Records</h2>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"titlebar\\\">Approve Survey Applications <img src=\\\"/assets/images/user_icon.png\\\">\\n    <div class=\\\"dropdown\\\" style=\\\"float: right;\\\">\\n      <button style=\\\"background-color: transparent; border: 0px; text-transform: uppercase; color:#27bed9; font-size: 14px;\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">MAPPROVER <span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <app-logout></app-logout>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"mojani_form\\\">\\n    <div *ngIf=\\\"approveSuccess; then successMsg else approveForm\\\" ></div>\\n    <ng-template #approveForm>\\n      <h2>Search Criteria</h2>\\n      <div class=\\\"form-group block\\\">\\n        <div class=\\\"col-lg-4\\\">\\n          <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label>\\n          <input type=\\\"text\\\" id=\\\"wardNo\\\" name=\\\"wardNo\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"wardNo\\\"  />\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n          <label>Plot/Site No.</label>\\n          <input type=\\\"submit\\\" value=\\\"Search\\\" (click)= \\\"search()\\\">\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n      <hr />\\n      <!--Search results of the land records for approval -->\\n      <div *ngIf= \\\"fetchComplete\\\" >\\n      <div class=\\\"block\\\">\\n      <table>\\n        <tr>\\n          <th>Property ID</th>\\n          <th>Ward No</th>\\n          <th>Area Code</th>\\n          <th>Site No</th>\\n          <th>Total Area</th>\\n          <th>Action</th>\\n        </tr>\\n        <tr *ngFor=\\\"let land of landRecords\\\">\\n          <td><a [routerLink] = \\\"['/viewLandRecord', land.pid]\\\">{{land.pid}}</a></td>\\n          <td>{{land.wardNo}}</td>\\n          <td>{{land.areaCode}}</td>\\n          <td>{{land.siteNo}}</td>\\n          <td>{{land.geoData.totalArea}}</td>\\n          <td><input type=\\\"checkbox\\\" name='approval'  [(ngModel)]='land.isMojaniApproved'  #approval=\\\"ngModel\\\" /></td>\\n        </tr>\\n      </table> \\n      </div>\\n   <div *ngIf='noSearchResults' style='color:red;margin-right: 40px;' align='center'><strong>No matching results found !</strong></div>\\n   <br/>\\n   <div *ngIf='!noSearchResults' align='right' style='margin-right: 40px;'>\\n     \\n   <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)= \\\"onReject()\\\">Reject</button>\\n   <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)= \\\"onSubmit()\\\">Approve</button>\\n   </div>\\n   </div>\\n   </ng-template>\\n   <!--Success message for the approval-->\\n   <ng-template #successMsg >\\n   <div  class=\\\"alert alert-success\\\"> <strong>Success!</strong>\\n   <span *ngIf = 'approveAction'>\\n     All the below approved records have been committed to the HyperLedger. Their unique digital Ids are listed below :\\n   </span>\\n   <span *ngIf = '!approveAction'>\\n     All the records with below PIDs have been rejected!\\n   </span>\\n     <ul *ngFor= \\\"let rec of approvedRecords\\\">\\n     <li>{{rec.pid}}</li>\\n   </ul>\\n   </div>\\n     <div class=\\\"alert alert-info\\\">\\n       Please click on <strong>OK</strong> to approve other applications !\\n     </div>\\n     <div align=\\\"center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitNew()\\\">OK</button></div>\\n    <br/>\\n     <div align=\\\"center\\\"><iframe src=\\\"https://blockdatalandrecord.mybluemix.net/\\\" width=\\\"1000px\\\" height= \\\"680px\\\" frameborder=\\\"0\\\"></iframe></div>\\n   </ng-template>\\n  </div>\\n</div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/approve-survey/approve-survey.component.html\n// module id = ./src/app/approve-survey/approve-survey.component.html\n// module chunks = main","import { Component, OnInit,NgModule } from '@angular/core';\nimport { LandRecord } from '../models/LandRecord';\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { Observable } from 'rxjs';\nimport { SurveyDataService } from \"../services/survey-data.service\";\n\n@Component({\n  selector: 'app-approve-survey',\n  templateUrl: './approve-survey.component.html',\n  styleUrls: ['./approve-survey.component.css']\n})\nexport class ApproveSurveyComponent implements OnInit {\n  approveSuccess : boolean = false;\n  landRecords : LandRecord[];\n  approvedRecords : LandRecord[];\n  wardNo : number;\n  fetchComplete : boolean = false;\n  noSearchResults : boolean = false;\n  approveAction : boolean = false;\n  blockExplorerURL: string;\n  \n  constructor(private manageLandRecordsService : ManageLandRecordsService, private surveyDataService : SurveyDataService) {\n   }\n\n  ngOnInit() {\n    this.surveyDataService.currentLandRecords.subscribe(records => {\n      this.landRecords = records;\n      if(this.landRecords!=null && this.landRecords.length > 0){\n        this.fetchComplete = true;\n        this.noSearchResults= false;\n      }\n    });\n  }\n\n  onSubmit(){\n    console.log(\"ApplicationData\" + JSON.stringify(this.landRecords));\n    this.approveAction = true;\n    //To add records to block chain\n    this.approvedRecords =  this.landRecords.filter(\n    (rec) => rec.isMojaniApproved);\n    this.manageLandRecordsService.updateMojaniApprovedRecords(this.approvedRecords)\n    .subscribe(\n      response => {\n        console.log(\"res received updateLandrecordMojani service\" + JSON.stringify(response));\n        if (response !=null && response.success) {\n          this.approveSuccess = true; \n          this.blockExplorerURL = \"https://blockdatalandrecord.mybluemix.net/\";\n        }   \n      });\n    \n  }\n\n  onReject(){\n    this.approveAction = false;\n    console.log(\"ApplicationData\" + JSON.stringify(this.landRecords));\n    this.approvedRecords =  this.landRecords.filter(\n    (rec) => rec.isMojaniApproved);\n\n    this.approvedRecords.forEach(\n    (record,index) => {\n        record.isMojaniRejected = true;\n        record.isMojaniApproved= false;\n    });\n    this.manageLandRecordsService.updateMojaniApprovedRecords(this.approvedRecords)\n    .subscribe(\n      response => {\n        console.log(\"res received updateLandrecordMojani service\" + JSON.stringify(response));\n        if (response !=null && response.success) {\n          this.approveSuccess = true; \n        }   \n      });\n    \n  }\n  \n\n  submitNew(){\n        this.landRecords = [];\n        this.approveSuccess= false;\n        this.wardNo = null;\n        this.fetchComplete = false;\n  }\n\n  search(){\n    console.log(\"ward No :\" + this.wardNo);\n    this.manageLandRecordsService.getLandRecordsMojaniByWard(this.wardNo)\n    .subscribe(\n      response => {\n            console.log(\"res received from getLandRecords service\" + JSON.stringify(response));\n            if (response !=null) {\n              //  this.router.navigate(['/success', this.landRecord.pid]);\n              this.landRecords = <LandRecord[]> response.landRecords.filter(landRec => !landRec.isMojaniApproved);\n             if(this.landRecords!=null && this.landRecords.length > 0){\n               this.noSearchResults= false;\n             }else{\n               this.noSearchResults = true;\n             }\n              this.fetchComplete = true;     \n              this.surveyDataService.updateLandRecords(this.landRecords);\n            }\n          });\n  }\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/approve-survey/approve-survey.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginAuthService : LoginAuthenticationService, private router :Router) { }\n  //implement canActivate Interface to check if user is already logged in\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) : boolean {\n     let url: string = state.url;\n\t   console.log('State Url:'+ url);\n\tif (this.loginAuthService.isUserLoggedIn()) {\n\t\treturn true; \n\t}\n   \n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth-guard.ts","module.exports = \".required:after {\\r\\n  content: \\\" *\\\";\\r\\n  color : red;\\r\\n}\\r\\n\\r\\n\\r\\nagm-map {\\r\\n  height: 300px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout-application/layout-application.component.css\n// module id = ./src/app/layout-application/layout-application.component.css\n// module chunks = main","module.exports = \"<div class=\\\"title_banner\\\">\\r\\n  <div class=\\\"container\\\" style=\\\"width:1230px;\\\">\\r\\n    <h1>One click away for Land Registry</h1>\\r\\n    <h2>Online Land Records</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"titlebar\\\">Application for Land Survey <img src=\\\"/assets/images/user_icon.png\\\">\\r\\n    <div class=\\\"dropdown\\\" style=\\\"float: right;\\\">\\r\\n      <button style=\\\"background-color: transparent; border: 0px; text-transform: uppercase; color:#27bed9; font-size: 14px;\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">MSURVEY <span class=\\\"caret\\\"></span></button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n        <app-logout></app-logout>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf =\\\"!submitSuccess;then applicationForm else applicationSuccess\\\"></div>\\r\\n  <ng-template #applicationForm>\\r\\n  <div class=\\\"mojani_form\\\">\\r\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"layoutForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <fieldset disabled>\\r\\n        <h2>Land Details</h2>\\r\\n        <div class=\\\"form-group block\\\">\\r\\n          <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('wardNo')\\\">\\r\\n            <label for=\\\"wardNo\\\">Ward #</label>\\r\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" class=\\\"form-control\\\" formControlName=\\\"wardNo\\\" />\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('wardNo')\\\" errorMsg=\\\"Please enter a valid ward #\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('areaCode')\\\">\\r\\n            <label for=\\\"areaCode\\\" >Area Code</label>\\r\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" class=\\\"form-control\\\" formControlName=\\\"areaCode\\\" />\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('areaCode')\\\" errorMsg=\\\"Please enter a valid area code\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('siteNo')\\\">\\r\\n            <label for=\\\"siteNo\\\">Plot/Site #</label>\\r\\n            <input type=\\\"text\\\" id=\\\"siteNo\\\" class=\\\"form-control\\\" formControlName=\\\"siteNo\\\" />\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('siteNo')\\\" errorMsg=\\\"Please enter a valid site #\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n    <fieldset [disabled]='isReadOnly'>\\r\\n      <hr />\\r\\n      <h2>Geographical Data</h2>\\r\\n        <div formGroupName=\\\"geoData\\\" class=\\\"block\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.latitude')\\\">\\r\\n              <label for=\\\"latitude\\\" class=\\\"required\\\">Latitude</label>\\r\\n              <input type=\\\"text\\\" id=\\\"latitude\\\" class=\\\"form-control\\\" formControlName=\\\"latitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.latitude')\\\" errorMsg=\\\"Valid latitue is required\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.longitude')\\\">\\r\\n              <label for=\\\"Longitude\\\" class=\\\"required\\\">Longitude</label>\\r\\n              <input type=\\\"text\\\" id=\\\"longitude\\\" class=\\\"form-control\\\" formControlName=\\\"longitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.longitude')\\\" errorMsg=\\\"Valid longitude is required\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.length')\\\">\\r\\n              <label for=\\\"length\\\" class=\\\"required\\\">Plot Length (ft.)</label>\\r\\n              <input type=\\\"text\\\" id=\\\"length\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" (change) = \\\"calculateTotalArea()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.length')\\\" errorMsg=\\\"Valid plot length is required\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.width')\\\">\\r\\n              <label for=\\\"width\\\" class=\\\"required\\\">Plot Width (ft.)</label>\\r\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"width\\\" (change) = \\\"calculateTotalArea()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.width')\\\" errorMsg=\\\"Valid plot width is required\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4\\\">\\r\\n              <label for=\\\"width\\\">Total Plot Area (sq. ft.)</label>\\r\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"totalArea\\\" readonly />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.address')\\\">\\r\\n              <label for=\\\"address\\\" class=\\\"required\\\">Property Address</label>\\r\\n              <textarea type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\"></textarea>\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.address')\\\" errorMsg=\\\"Valid plot address is required\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-8\\\" *ngIf=\\\"lat && long\\\">\\r\\n              <app-gmaps [lat]=\\\"lat\\\"  [lng]=\\\"long\\\"></app-gmaps>\\r\\n            </div>\\r\\n          </div> \\r\\n        </div>\\r\\n        <hr />\\r\\n        <h2>Pre Mutation Sketch</h2>\\r\\n        <div class=\\\"block\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-4\\\" *ngIf=\\\"!isReadOnly\\\" >\\r\\n            <label for=\\\"sketch\\\" class=\\\"required\\\">Upload Plot Sketch</label>\\r\\n            <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\"image/*\\\" name=\\\"sketch\\\" formControlName=\\\"sketch\\\">\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('sketch')\\\" errorMsg=\\\"Pre mutation sketch of the plot is required\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4\\\" *ngIf=\\\"sketchURL!=null && sketchURL!=''\\\">\\r\\n        <a [href]='sketchURL' target = '_blank'>View Sketch</a>\\r\\n        </div>\\r\\n        </div>\\r\\n        <hr />\\r\\n        <h2>Land Allottee Details</h2>\\r\\n          <div formGroupName=\\\"ownerDetails\\\" class=\\\"block\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.ownerName')\\\">\\r\\n                <label for=\\\"ownerName\\\" class=\\\"required\\\">Allottee Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ownerName\\\" formControlName=\\\"ownerName\\\">\\r\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.ownerName')\\\" errorMsg=\\\"Valid allottee name is required\\\"></app-show-validation-error>\\r\\n              </div>\\r\\n  \\r\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.aadharNo')\\\">\\r\\n                <label for=\\\"aadharNo\\\" class=\\\"required\\\">Aadhar #</label>\\r\\n                <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\r\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.aadharNo')\\\" errorMsg=\\\"valid aadhar# is required\\\"></app-show-validation-error>\\r\\n              </div>\\r\\n  \\r\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.gender')\\\">\\r\\n                <div> <label class=\\\"required\\\">Gender</label></div>\\r\\n                <label class=\\\"lg-check radio-inline\\\">\\r\\n                  <input type=\\\"radio\\\" value=\\\"M\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Male\\r\\n                </label>\\r\\n                <label class=\\\"lg-check radio-inline\\\">\\r\\n                  <input type=\\\"radio\\\" value=\\\"F\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Female\\r\\n                </label>\\r\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.mobileNo')\\\">\\r\\n                <label for=\\\"mobileNo\\\" class=\\\"required\\\">Mobile</label>\\r\\n                <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\r\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.mobileNo')\\\" errorMsg=\\\"Valid mobile # is required\\\"></app-show-validation-error>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.emailID')\\\">\\r\\n                <label for=\\\"emailID\\\" class=\\\"required\\\">Email ID</label>\\r\\n                <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\r\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.emailID')\\\" errorMsg=\\\"Valid email Id is required\\\"></app-show-validation-error>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.address')\\\">\\r\\n                <label for=\\\"ownerAddress\\\" class=\\\"required\\\">Allottee Address</label>\\r\\n                <textarea type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" ></textarea>\\r\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.address')\\\" errorMsg=\\\"Valid allottee address is required\\\"></app-show-validation-error>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </fieldset>\\r\\n      <div align=\\\"center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click) = 'goBack()'>Back</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]='isReadOnly'>Submit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <ng-template #applicationSuccess>\\r\\n    <div class=\\\"alert alert-success\\\"> <strong>Success!</strong>Application has been submitted successfully ! The digital Idenfication number for this record is <strong>{{landRecord.pid}}</strong></div>\\r\\n    <div class=\\\"alert alert-info\\\">\\r\\n      Please click on <strong>OK</strong> to return to the survey layout page !\\r\\n    </div>\\r\\n    <div align=\\\"center\\\">      \\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click) = 'goBack()'>OK</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout-application/layout-application.component.html\n// module id = ./src/app/layout-application/layout-application.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n\r\nimport { Http } from '@angular/http';\r\nimport { ActivatedRoute, Params , Router} from '@angular/router'; \r\nimport { Location } from '@angular/common';\r\nimport { FileUploadService } from '../services/file-upload.service';\r\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\r\nimport { LandRecord } from '../models/LandRecord';\r\n\r\n\r\n@Component({\r\n  selector: 'app-layout-application',\r\n  templateUrl: './layout-application.component.html',\r\n  styleUrls: ['./layout-application.component.css']\r\n})\r\nexport class LayoutApplicationComponent implements OnInit {\r\n  private layoutForm: FormGroup;\r\n  private landRecord: LandRecord = new LandRecord(); //initialize land record object\r\n  private submitSuccess: boolean = false;\r\n  private isReadOnly: boolean = false;\r\n  private lat :number;\r\n  private long : number; \r\n  private filesToUpload: Array<File> = [];\r\n  private formData: FormData = new FormData();\r\n  private getDetailsSub : any;\r\n  private sketchURL:string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private manageLandRecordsService: ManageLandRecordsService,\r\n    private http: Http, private filUploadService: FileUploadService, private router : Router, \r\n    private route : ActivatedRoute, private location : Location) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.getDetailsSub.unsubscribe();\r\n  }\r\n\r\n  createForm() {\r\n    this.submitSuccess = false;\r\n    this.lat=null;\r\n    this.long = null;\r\n    this.layoutForm = this.formBuilder.group({\r\n      pid: '',\r\n      wardNo: [null, Validators.required],\r\n      areaCode: [null, Validators.required],\r\n      siteNo: [null, Validators.required],\r\n      geoData: this.formBuilder.group({\r\n          latitude: [null, [Validators.required,Validators.pattern('[0-9]{1,2}\\\\.{0,1}[0-9]{0,8}')]],\r\n          longitude: [null, [Validators.required,Validators.pattern('[0-9]{1,2}\\\\.{0,1}[0-9]{0,8}')]],\r\n          length: [null, [Validators.required,Validators.pattern('[0-9]{1,3}')]],\r\n          width: [null, Validators.required],\r\n          totalArea: '',\r\n          address: [null, Validators.required]\r\n      }),\r\n      sketch : [null],\r\n      ownerDetails: this.formBuilder.group({\r\n          ownerName: [null, [Validators.required,Validators.pattern('[a-zA-Z\\\\s]*')]],\r\n          gender: [null, Validators.required],\r\n          aadharNo: [null, [Validators.required, Validators.pattern('[0-9]{12}')]],\r\n          mobileNo: [null, [Validators.required,Validators.pattern('[0-9]{10}')]],\r\n          emailID: [null, [Validators.required,Validators.email]],\r\n          address: [null, Validators.required]\r\n      })\r\n    });\r\n    \r\n    \r\n   this.getDetailsSub =this.route.queryParams.subscribe(params => {\r\n            let pid = +params['pid'] || 0; // + converts string pid to number\r\n            this.manageLandRecordsService.getLandRecordsMojaniByPid(pid).subscribe(response => { //fetch the details if already existing in db\r\n                  console.log(\"res received getLandRecordbyPid service\" + JSON.stringify(response));\r\n                  //parse the reponse for already existing record\r\n                  if (response !=null && response.success) {\r\n                    if(response.landRecords!=null){\r\n                      delete response.landRecords[\"sketch\"];\r\n                      this.landRecord =<LandRecord> response.landRecords; \r\n                      console.log(\"landRecord object received:\" +JSON.stringify( this.landRecord));\r\n                      this.layoutForm.patchValue(this.landRecord); //set the form model object from data model object\r\n                      this.setGeoCordinates();\r\n                   }\r\n                   if(response.sketchURL!=null && response.sketchURL!=\"\"){\r\n                      this.sketchURL = response.sketchURL;\r\n                   }\r\n                   if(this.landRecord.isMojaniSubmitted){ //set the form to read only if already submitted\r\n                      this.isReadOnly = true;\r\n                   }\r\n                  }\r\n                  \r\n            }); \r\n        }); \r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.layoutForm.get(field).valid && this.layoutForm.get(field).touched && !this.isReadOnly;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'has-error': this.isFieldValid(field),\r\n      'has-feedback': this.isFieldValid(field)\r\n    };\r\n  }\r\n\r\n\r\n  setGeoCordinates(){\r\n        this.lat = parseFloat(this.layoutForm.get('geoData.latitude').value);\r\n        this.long =parseFloat( this.layoutForm.get('geoData.longitude').value);\r\n  }\r\n  calculateTotalArea(){\r\n        let length =  parseFloat(this.layoutForm.get('geoData.length').value);\r\n        let width =  parseFloat(this.layoutForm.get('geoData.width').value);\r\n        let totalArea = length * width ; \r\n        if(!isNaN(totalArea)){\r\n          console.log(\"Total Area: \" + totalArea);\r\n        this.layoutForm.patchValue({'geoData' : {'totalArea' : totalArea}});\r\n        }\r\n  }\r\n  \r\n  onSubmit() {\r\n    if (this.layoutForm.valid) {\r\n      console.log('form valid success');\r\n      //sync the form model with the data model\r\n      this.landRecord = <LandRecord>this.layoutForm.value;\r\n      this.landRecord.pid =parseInt(this.landRecord.wardNo.toString().substr(0, 3) + this.landRecord.areaCode.toString().substr(0, 3) + this.landRecord.siteNo.toString().substr(0, 3));\r\n      console.log(\"pid generated: \" + this.landRecord.pid);\r\n      this.landRecord.isMojaniSubmitted = true; // make the submitted flag as true\r\n      this.manageLandRecordsService.updateMojaniSubmitRecord(this.landRecord)\r\n      .subscribe(\r\n        response => {\r\n          console.log(\"res received updateLandRecord service\" + JSON.stringify(response));\r\n            if (response !=null && response.success) {\r\n              this.submitSuccess = true;\r\n              let files: Array<File> = this.filesToUpload;\r\n              //uplod the file as attachment to the document once documents updated\r\n              if (files.length > 0) {\r\n                let file: File = files[0];//construct file name before upload\r\n                let fileName = this.landRecord.pid + \"_sketch\" + \".\"+ file['name'].split(\".\")[1];\r\n                this.formData.append(\"uploads[]\",file, fileName);\r\n                console.log(\"file name :\" + file['name']);\r\n                //Upload the files to server\r\n                this.filUploadService.uploadFiles(this.formData)\r\n                    .subscribe(files => console.log('files uploaded :' + files));\r\n              }\r\n            }\r\n        });\r\n    } else {\r\n      this.validateAllFormFields(this.layoutForm);\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n\r\n     this.location.back();\r\n  }\r\n\r\n  fileChange(event) {  //hold the file to be uploaded to the cloudant db when attached\r\n   this.filesToUpload= <Array<File>>event.target.files;\r\n  }\r\n\r\n  submitNew() {\r\n    this.createForm();\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      console.log(field);\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout-application/layout-application.component.ts","module.exports = \"/* CSS */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"home_banner\\\">\\n<div class=\\\"container\\\" style=\\\"width:1230px;\\\">\\n    <h1>Mojani</h1>\\n    <h2>One click away for Land Registry</h2>\\n    <h3>Online Land Records</h3>\\n</div>\\n</div>\\n<div class=\\\"login_container\\\">\\n    <div class=\\\"container\\\" style=\\\"width:1230px; background: url(/assets/images/sign_in_title.png) no-repeat left center;\\n    padding: 30px 0 40px 0; \\\">\\n    <div class=\\\"col-lg-2\\\">&nbsp;</div>\\n    <form #userlogin = \\\"ngForm\\\" (ngSubmit) = \\\"onSubmit(userlogin)\\\" novalidate> \\n    <div class=\\\"form-group col-lg-4\\\" [ngClass]=\\\"{ 'has-error': userlogin.submitted && !username.valid }\\\">\\n        <label>Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" [(ngModel)]=\\\"login.username\\\" #username=\\\"ngModel\\\" required>\\n    </div>\\n    <div class=\\\"form-group col-lg-4\\\" [ngClass]=\\\"{ 'has-error': userlogin.submitted && !password.valid }\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"login.password\\\" #password=\\\"ngModel\\\" required>\\n    </div>        \\n    <div class=\\\"form-group col-lg-2\\\">\\n        <input type=\\\"submit\\\" value=\\\"LOG IN\\\">\\n    </div>     \\n    </form>\\n    <div *ngIf=\\\"authMessage && authMessage!=''\\\" class=\\\"alert alert-danger\\\" ><b>{{authMessage}}</b></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\nimport { Router} from '@angular/router';\nimport { Form } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  login: any = {};\n  loading = false;\n  authMessage : string;\n\n  constructor(private loginAuthService : LoginAuthenticationService, private router: Router) {}\n\n  ngOnInit() {\n   // document.body.classList.add(\"loginPage\");\n          document.body.style.backgroundImage = \"url('/assets/images/survey-bg.jpg')\";\n          document.body.style.backgroundSize = \"cover\";\n          //document.getElementById(\"loginbox\").classList.add(\"loginLabels\");\n          //document.getElementById(\"headerTitle\").classList.add(\"header\");\n\n  }\n\n  ngOnDestroy() {\n   // document.body.classList.remove(\"loginPage\");\n   document.body.removeAttribute(\"style\");\n  }\n  onSubmit(userlogin : NgForm){\n    if(userlogin.valid){\n        this.loading = true; // validation in progress\n        console.log(\"Form values :\" + JSON.stringify(this.login));\n        let user = {\"userId\" : this.login.username, \"password\" : this.login.password};\n        //check for user authentication\n        this.loginAuthService.isUserAuthenticated (user)\n        .subscribe(\n        authenticated => {\n            this.loading=false;\n            console.log(\"res received authentication service :\" + authenticated);\n            if (authenticated) {\n              this.authMessage=null;\n              //if auth success route according to the role\n              console.log(\"logged in role :\" + this.loginAuthService.getLoggedInRole());\n              if(this.loginAuthService.getLoggedInRole() == \"Mojani_Surveyor\"){\n                console.log(\"inside mojani survey\");\n                this.router.navigateByUrl('/submitLayoutSurvey');\n              }\n              else if(this.loginAuthService.getLoggedInRole() == \"Mojani_Approver\"){\n                console.log(\"Inside mojani approver\");\n                this.router.navigateByUrl('/approveSurveys');\n              }            \n            }else{\n                this.authMessage = this.loginAuthService.getAuthMessage();\n            }\n         });\n     }else{\n        if((this.login.username ==null || this.login.username ==\"\")  && (this.login.password ==null || this.login.password == \"\")){\n          this.authMessage = \"Username & password are required !\"\n        }\n        else if(this.login.username ==null || this.login.username == \"\"){\n            this.authMessage = \"Username is required !\"\n        }\n        else if(this.login.password == null || this.login.password == \"\"){\n          this.authMessage = \"Password is required !\";\n        }\n     }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"/* CSS */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logout/logout.component.css\n// module id = ./src/app/logout/logout.component.css\n// module chunks = main","module.exports = \"<li><a href=\\\"#\\\" (click)='logout()'>LOG OUT</a></li>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logout/logout.component.html\n// module id = ./src/app/logout/logout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\n\nexport class LogoutComponent implements OnInit{\n    loggedInUser : string;\n    userRole : string;\n\n    constructor(private authService: LoginAuthenticationService, private router: Router) {}\n    ngOnInit() {\n      this.loggedInUser =this.authService.getLoggedInUser();\n      this.userRole = this.authService.getLoggedInRole();\n    }\n    \n    \n    logout() { \n      //redirect to login screen after logout\n      this.authService.logoutUser();\n      this.router.navigateByUrl('/Login');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logout/logout.component.ts","export class LandRecord {\r\n  pid: number;\r\n  wardNo: number;\r\n  areaCode: number;\r\n  siteNo: number;\r\n  geoData: GeoData;\r\n  owner: Owner;\r\n  isMojaniSubmitted : boolean;\r\n  isMojaniApproved : boolean;\r\n  isMojaniRejected: boolean;\r\n  constructor() { }\r\n\r\n}\r\n\r\nexport class GeoData {\r\n  latitude: number;\r\n  longitude: number;\r\n  length: number;\r\n  width: number;\r\n  totalArea: number;\r\n  address: string;\r\n  constructor() { }\r\n}\r\n\r\nexport class Owner {\r\n  ownerName: string;\r\n  gender: string;\r\n  aadharNo: number;\r\n  mobileNo: number;\r\n  emailID: string;\r\n  address: string;\r\n  constructor() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/LandRecord.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FileUploadService {\n\n  constructor(private http:Http) { }\n \n  public uploadFiles(formData : FormData) {\n    console.log(\"Inside File upload service\");\n   return this.http.post('/uploads/fileUpload', formData)\n         .map(files => files.json());\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/file-upload.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class LoginAuthenticationService {\n  \n  private isLoggedIn: boolean = false; \n  private loggedInRole : string;\n  private authMessage : string;\n  private loggedInUser : string;\n\n  constructor(private http:Http){} \n    // API: POST /UserAuthentication\n    public isUserAuthenticated(userInfo) : Observable<boolean>{\n      console.log(\"Inside isUserAuthenticated function in authentication service\");\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      return this.http.post('/login/api/authentication', JSON.stringify(userInfo), { headers: headers })\n        .map(res => {         \n          let jsonRes= res.json();\n          if(jsonRes.authSuccess){\n              this.isLoggedIn = true;\n              this.loggedInRole = jsonRes.role;\n              this.authMessage = jsonRes.message;\n              this.loggedInUser = jsonRes.user;\n              return true;\n          }else{\n              this.isLoggedIn = false;\n              this.authMessage = jsonRes.message;\n              return false;\n          }\n        \n      });     \n    }\n    \n    isUserLoggedIn(): boolean {\n\t\treturn this.isLoggedIn;\n\t  }\n\n    logoutUser(): void {\n\t\tthis.isLoggedIn = false;\n\t}\n\n     getLoggedInRole(): string {\n     return this.loggedInRole ;\n\n    }\n  \n     getAuthMessage(): string {\n     return this.authMessage ;\n\n    }\n    getLoggedInUser(): string {\n      return this.loggedInUser ;\n \n     }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/login-authentication.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LandRecord } from '../models/LandRecord';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class ManageLandRecordsService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  // API: GET /landRecords/:wardNo\r\n  public getLandRecordsMojaniByWard(wardNo: number) : Observable<any> {\r\n    console.log(\"Inside getLandRecordsMojaniByWard method in manageLandRecord service\");\r\n    return this.http.get('/manageLandRecords/api/getLandRecordsMojaniByWard/'+wardNo) \r\n    .map(res => res.json() );\r\n  }\r\n\r\n    // API: GET /landRecords/:pId\r\n  public getLandRecordsMojaniByPid(pId: number) : Observable<any> {\r\n      console.log(\"Inside getLandRecordsMojaniByPid method in manageLandRecord service\");\r\n      return this.http.get('/manageLandRecords/api/getLandRecordsMojaniByPid/'+pId) \r\n      .map(res => res.json() );\r\n  }\r\n\r\n    // API: GET /landRecords/:wardNo/:areaCode\r\n  public getLandRecordsMojaniInLayout(layout: any) : Observable<any> {\r\n      console.log(\"Inside getLandRecordsMojaniInLayout method in manageLandRecord service\");\r\n      return this.http.get('/manageLandRecords/api/getLandRecordsMojaniInLayout/'+layout.wardNo+\"/\"+layout.areaCode) \r\n      .map(res => res.json() );\r\n    }\r\n\r\n  // API: POST /landRecord\r\n  public addLandRecordMojani(landRecord: LandRecord){\r\n    console.log(\"Inside addLandRecordMojani method in manageLandRecord service\");\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/manageLandRecords/api/addLandRecordMojani', JSON.stringify(landRecord), { headers: headers })\r\n      .map(res => res.json());     \r\n  }\r\n\r\n\r\n    // API: POST /landRecords[]\r\n  public updateMojaniApprovedRecords(landRecords: LandRecord[]){\r\n      console.log(\"Inside updateMojaniApprovedRecords method in manageLandRecord service\");\r\n      let headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      return this.http.post('/manageLandRecords/api/updateMojaniApprovedStatus', JSON.stringify(landRecords), { headers: headers })\r\n        .map(res => res.json());     \r\n    }\r\n\r\n        // API: POST /landRecord\r\n  public updateMojaniSubmitRecord(landRecord: LandRecord){\r\n    console.log(\"Inside updateMojaniSubmitRecord method in manageLandRecord service\");\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/manageLandRecords/api/updateLandRecordMojani', JSON.stringify(landRecord), { headers: headers })\r\n      .map(res => res.json());     \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/managelandrecords.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport {LandRecord} from '../models/LandRecord';\n\n@Injectable()\nexport class SurveyDataService {\n  private landRecords = new BehaviorSubject<LandRecord[]>([]);\n  currentLandRecords = this.landRecords.asObservable();\n\n  private wardNo = new BehaviorSubject(\"\");\n  currentWardNo = this.wardNo.asObservable();\n\n  private siteNo = new BehaviorSubject(\"\");\n  currentSiteNo = this.siteNo.asObservable();\n\n  private areaCode = new BehaviorSubject(\"\");\n  currentAreaCode = this.areaCode.asObservable();\n\n  constructor() { \n    \n  }\n  updateLandRecords(records : LandRecord[]) {\n      this.landRecords.next(records);\n  }\n\n  updateWardNo(wardNo :any){\n      this.wardNo.next(wardNo);\n  }\n  updateSiteNo(siteNo :any){\n    this.siteNo.next(siteNo);\n  }\n  updateAreaCode(areaCode :any){\n    this.areaCode.next(areaCode);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/survey-data.service.ts","module.exports = \".error-msg {\\n  color: #a94442;\\n}\\n\\n.fix-error-icon {\\n  top: 27px;\\n}\\n\\n.required:after {\\n  content: \\\" *\\\";\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/show-validation-error/show-validation-error.component.css\n// module id = ./src/app/show-validation-error/show-validation-error.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"displayError\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\\\"></span>\\r\\n  <span class=\\\"sr-only\\\">(error)</span>\\r\\n  <div class=\\\"error-msg\\\">\\r\\n    {{ errorMsg }}\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/show-validation-error/show-validation-error.component.html\n// module id = ./src/app/show-validation-error/show-validation-error.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-show-validation-error',\n  templateUrl: './show-validation-error.component.html',\n  styleUrls: ['./show-validation-error.component.css']\n})\nexport class ShowValidationErrorComponent implements OnInit {\n  @Input() errorMsg: string;\n  @Input() displayError: boolean;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/show-validation-error/show-validation-error.component.ts","module.exports = \"/*CSS to go here */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/submit-layout-survey/submit-layout-survey.component.css\n// module id = ./src/app/submit-layout-survey/submit-layout-survey.component.css\n// module chunks = main","module.exports = \"<div class=\\\"title_banner\\\">\\n  <div class=\\\"container\\\" style=\\\"width:1230px;\\\">\\n    <h1>One click away for Land Registry</h1>\\n    <h2>Online Land Records</h2>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"titlebar\\\">Submit Survey for Layout <img src=\\\"/assets/images/user_icon.png\\\">\\n    <div class=\\\"dropdown\\\" style=\\\"float: right;\\\">\\n      <button style=\\\"background-color: transparent; border: 0px; text-transform: uppercase; color:#27bed9; font-size: 14px;\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">MSURVEY <span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <app-logout></app-logout>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"mojani_form\\\">\\n    <div *ngIf=\\\"submitSuccess; then successMsg else approveForm\\\" ></div>\\n    <ng-template #approveForm>\\n      <h2>Search Criteria</h2> \\n        <div class=\\\"form-group block\\\">\\n          <div class=\\\"col-lg-4\\\">\\n            <label for=\\\"wardNo\\\" required>Ward # <span class=\\\"red\\\">*</span></label>\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" name=\\\"wardNo\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"wardNo\\\"  />\\n          </div>\\n          <div class=\\\"col-lg-4\\\">\\n            <label for=\\\"areaCode\\\" required>Area Code <span class=\\\"red\\\">*</span></label>\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" name=\\\"areaCode\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"areaCode\\\"  />\\n          </div>\\n          <div class=\\\"col-lg-4\\\">\\n            <label>Plot/Site No.</label>\\n            <input type=\\\"submit\\\" value=\\\"Search\\\" (click)= \\\"search()\\\">\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n        </div> \\n        <hr />\\n      <!--Search results of the land records for approval -->\\n      <div *ngIf= \\\"fetchComplete\\\" >\\n        <div class=\\\"block\\\">\\n        <table>\\n          <tr>\\n            <th>PID</th>\\n            <th>Site No</th>\\n            <th>Total Area</th>\\n            <th>Latitude</th>\\n            <th>Longitude</th>\\n            <th>Status</th>\\n          </tr>\\n          <tr *ngFor=\\\"let land of landRecords;let i = index\\\">\\n              <td><a [routerLink] = \\\"['/layoutApplication']\\\" [queryParams]=\\\"{pid:land.pid}\\\">{{land.pid}}</a></td>\\n              <td>{{land.siteNo}}</td>\\n              <td>{{land.geoData.totalArea}}</td>\\n              <td>{{land.geoData.latitude}}</td>\\n              <td>{{land.geoData.longitude}}</td>\\n              <td>{{getApplicationStatus(land)}}</td>\\n          </tr>\\n        </table> \\n      <div *ngIf='noSearchResults' style='color:red;' align='center'><strong>No matching results found !</strong></div>\\n      </div>\\n      </div>\\n    </ng-template>\\n    <!--Success message for the approval-->\\n    <ng-template #successMsg >\\n      <div class=\\\"alert alert-success\\\"> <strong>Success!</strong>\\n      The survey application has been submitted successfully !\\n      </div>\\n      <div class=\\\"alert alert-info\\\">\\n        Please click on <strong>OK</strong> to submit a new application !\\n      </div>\\n      <div align=\\\"center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitNew()\\\">OK</button></div>\\n    </ng-template>\\n  </div>\\n</div>\\n\\n\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/submit-layout-survey/submit-layout-survey.component.html\n// module id = ./src/app/submit-layout-survey/submit-layout-survey.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LandRecord } from '../models/LandRecord';\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { Observable } from 'rxjs';\nimport { SurveyDataService } from \"../services/survey-data.service\";\n\n@Component({\n  selector: 'app-submit-layout-survey',\n  templateUrl: './submit-layout-survey.component.html',\n  styleUrls: ['./submit-layout-survey.component.css']\n})\n\nexport class SubmitLayoutSurveyComponent implements OnInit {\n  private wardNo : number;\n  private areaCode : number;\n  private fetchComplete : boolean = false;\n  private noSearchResults : boolean = false;\n  private landRecords : LandRecord[];\n  constructor(private manageLandRecordsService : ManageLandRecordsService,private surveyDataService: SurveyDataService) { }\n\n  ngOnInit() {\n    this.surveyDataService.currentWardNo.subscribe(records => {\n      if(records)\n        this.wardNo = Number(records);\n    });\n    this.surveyDataService.currentAreaCode.subscribe(records => {\n      if(records)\n        this.areaCode = Number(records);\n    });\n\n    //search the results if areacode and ward number present\n\n    let criteria = {\"wardNo\" : this.wardNo, \"areaCode\" : this.areaCode};\n    if(this.wardNo!=null && this.areaCode!=null){\n      this.manageLandRecordsService.getLandRecordsMojaniInLayout(criteria)\n      .subscribe(\n        response => {\n              console.log(\"res received from getLandRecords service\" + JSON.stringify(response));\n              if (response !=null) {\n                delete response.landRecords['sketch'];\n                  this.landRecords = <LandRecord[]> response.landRecords;\n              if(this.landRecords!=null && this.landRecords.length > 0){\n                  this.noSearchResults= false;\n              }else{\n                  this.noSearchResults = true;\n              }\n                  this.fetchComplete = true;     \n              }\n            });\n    }\n  }\n\n  search(){\n    console.log(\"ward No & Area Code:\" + this.wardNo + \"-\" + this.areaCode);\n    let criteria = {\"wardNo\" : this.wardNo, \"areaCode\" : this.areaCode};\n    this.manageLandRecordsService.getLandRecordsMojaniInLayout(criteria)\n    .subscribe(\n      response => {\n            console.log(\"res received from getLandRecords service\" + JSON.stringify(response));\n            if (response !=null) {\n                delete response.landRecords['sketch'];\n                this.landRecords = <LandRecord[]> response.landRecords;\n             if(this.landRecords!=null && this.landRecords.length > 0){\n                this.noSearchResults= false;\n             }else{\n                this.noSearchResults = true;\n             }\n                this.fetchComplete = true;     \n                this.surveyDataService.updateWardNo(this.wardNo);\n                this.surveyDataService.updateAreaCode(this.areaCode);\n            }\n          });\n          \n  }\n\n  getApplicationStatus(landRecord){\n       if(landRecord && landRecord.isMojaniSubmitted){\n            if(landRecord.isMojaniApproved){\n              return \"Approved\";\n            }else if(landRecord.isMojaniRejected) {\n              return \"Rejected\";\n            }else{\n              return \"Submitted\";\n            }\n          }\n          return \"Not Submitted\";\n  }\n\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/submit-layout-survey/submit-layout-survey.component.ts","module.exports = \"/*add css here */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-land-record/view-land-record.component.css\n// module id = ./src/app/view-land-record/view-land-record.component.css\n// module chunks = main","module.exports = \"<div class=\\\"title_banner\\\">\\n  <div class=\\\"container\\\" style=\\\"width:1230px;\\\">\\n    <h1>One click away for Land Registry</h1>\\n    <h2>Online Land Records</h2>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"titlebar\\\">View Application for Land Survey <img src=\\\"/assets/images/user_icon.png\\\">\\n    <div class=\\\"dropdown\\\" style=\\\"float: right;\\\">\\n      <button style=\\\"background-color: transparent; border: 0px; text-transform: uppercase; color:#27bed9; font-size: 14px;\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">MAPPROVER <span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <app-logout></app-logout>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"mojani_form\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"layoutForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <fieldset disabled>\\n        <h2>Land Details</h2>\\n        <div class=\\\"form-group block\\\">\\n          <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('wardNo')\\\">\\n            <label for=\\\"wardNo\\\" class=\\\"required\\\">Ward #</label>\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" class=\\\"form-control\\\" formControlName=\\\"wardNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('wardNo')\\\" errorMsg=\\\"Ward # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('areaCode')\\\">\\n            <label for=\\\"areaCode\\\" class=\\\"required\\\">Area Code</label>\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" class=\\\"form-control\\\" formControlName=\\\"areaCode\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('areaCode')\\\" errorMsg=\\\"Area code is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('siteNo')\\\">\\n            <label for=\\\"siteNo\\\" class=\\\"required\\\">Plot/Site #</label>\\n            <input type=\\\"text\\\" id=\\\"siteNo\\\" class=\\\"form-control\\\" formControlName=\\\"siteNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('siteNo')\\\" errorMsg=\\\"Plot/Site # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n        <hr />\\n        <h2>Geographic Data</h2>\\n        <div formGroupName=\\\"geoData\\\" >\\n          <div class=\\\"form-group block\\\">\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.latitude')\\\">\\n              <label for=\\\"latitude\\\" class=\\\"required\\\">Latitude</label>\\n              <input type=\\\"text\\\" id=\\\"latitude\\\" class=\\\"form-control\\\" formControlName=\\\"latitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.latitude')\\\" errorMsg=\\\"Latitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.longitude')\\\">\\n              <label for=\\\"Longitude\\\" class=\\\"required\\\">Longitude</label>\\n              <input type=\\\"text\\\" id=\\\"longitude\\\" class=\\\"form-control\\\" formControlName=\\\"longitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.longitude')\\\" errorMsg=\\\"Longitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group block\\\">\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.length')\\\">\\n              <label for=\\\"length\\\" class=\\\"required\\\">Plot Length (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"length\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.length')\\\" errorMsg=\\\"Plot length is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.width')\\\">\\n              <label for=\\\"width\\\" class=\\\"required\\\">Plot Width (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"width\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.width')\\\" errorMsg=\\\"Plot width is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-lg-4\\\">\\n              <label for=\\\"width\\\">Total Plot Area (sq. ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"totalArea\\\" readonly />\\n            </div>\\n          </div>\\n          <div class=\\\"form-group block\\\">\\n            <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('geoData.address')\\\">\\n              <label for=\\\"address\\\" class=\\\"required\\\">Property Address</label>\\n              <textarea type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" ></textarea>\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.address')\\\" errorMsg=\\\"Plot address is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-lg-8\\\" *ngIf=\\\"lat && long\\\">\\n              <app-gmaps [lat]=\\\"lat\\\"  [lng]=\\\"long\\\"></app-gmaps>\\n            </div>\\n          </div>          \\n          </div>\\n          <hr />\\n          <h2>Pre Mutation Sketch</h2>\\n          <div class=\\\"block\\\">\\n          <div class=\\\"col-lg-4\\\" *ngIf=\\\"sketchURL!=null && sketchURL!=''\\\">\\n          <a [href]='sketchURL' target = '_blank'>View Sketch</a>\\n          </div>\\n          </div>\\n          <hr />\\n          <h2>Land Allottee Details</h2>\\n          <div formGroupName=\\\"ownerDetails\\\">\\n            <div class=\\\"form-group block\\\">\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.ownerName')\\\">\\n                <label for=\\\"ownerName\\\" class=\\\"required\\\">Allottee Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ownerName\\\" formControlName=\\\"ownerName\\\">\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\n              </div>\\n  \\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.aadharNo')\\\">\\n                <label for=\\\"aadharNo\\\" class=\\\"required\\\">Aadhar #</label>\\n                <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\n              </div>\\n  \\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.gender')\\\">\\n                <div> <label class=\\\"required\\\">Gender</label></div>\\n                <label class=\\\"lg-check radio-inline\\\">\\n                  <input type=\\\"radio\\\" value=\\\"M\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Male\\n                </label>\\n                <label class=\\\"lg-check radio-inline\\\">\\n                  <input type=\\\"radio\\\" value=\\\"F\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Female\\n                </label>\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group block\\\">\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.mobileNo')\\\">\\n                <label for=\\\"mobileNo\\\" class=\\\"required\\\">Mobile</label>\\n                <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\n              </div>\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.emailID')\\\">\\n                <label for=\\\"emailID\\\" class=\\\"required\\\">Email ID</label>\\n                <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group block\\\">\\n              <div class=\\\"col-lg-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.address')\\\">\\n                <label for=\\\"ownerAddress\\\" class=\\\"required\\\">Allottee Address</label>\\n                <textarea type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\"></textarea>\\n                <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\n              </div>\\n            </div>\\n          </div>\\n    </fieldset>\\n    <div align=\\\"center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Back</button>\\n    </div>\\n    </form>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-land-record/view-land-record.component.html\n// module id = ./src/app/view-land-record/view-land-record.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Params , Router} from '@angular/router'; \nimport { Location } from '@angular/common';\n\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { LandRecord } from '../models/LandRecord';\nimport 'rxjs/add/operator/switchMap'; \n\n@Component({\n  selector: 'app-viewlandrecord',\n  templateUrl: './view-land-record.component.html',\n  styleUrls: ['./view-land-record.component.css']\n})\nexport class ViewlandrecordComponent implements OnInit {\n\n  layoutForm: FormGroup;\n  landRecord: LandRecord = new LandRecord(); //initialize land record object\n  submitSuccess: boolean = false;\n  lat :number;\n  long : number; \n  sketchURL : string;\n constructor(private formBuilder: FormBuilder,private location: Location, private manageLandRecordsService: ManageLandRecordsService, private router: Router,private route: ActivatedRoute) { }\n  ngOnInit() {\n    this.loadForm();\n  }\n\n  loadForm() {\n    this.submitSuccess = false;\n    this.lat=null;\n    this.long = null;\n    this.layoutForm = this.formBuilder.group({\n      pid: [''],\n      wardNo: [null],\n      areaCode: [null,],\n      siteNo: [null,],\n      geoData: this.formBuilder.group({\n        latitude: [null],\n        longitude: [null],\n        length: [null],\n        width: [null],\n        totalArea: '',\n        address: [null]\n      }),\n      preMutationSketch: [null],\n      ownerDetails: this.formBuilder.group({\n        ownerName: [null],\n        gender:[null],\n        aadharNo: [null],\n        mobileNo: [null],\n        emailID:[null],\n        address: [null]\n      })\n\n    });\n    this.route.params\n          .switchMap((params: Params) => this.manageLandRecordsService.getLandRecordsMojaniByPid(params['id']))\n          .subscribe(\n            response => {\n              console.log(\"res received getLandRecordbyPid service\" + JSON.stringify(response));\n              if (response !=null && response.success) {\n                this.landRecord =<LandRecord> response.landRecords; \n                console.log(\"landRecord object received:\" + this.landRecord);\n                this.layoutForm.patchValue(this.landRecord);\n                this.setGeoCordinates();\n                if(response.sketchURL!=null && response.sketchURL!=\"\"){\n                  this.sketchURL = response.sketchURL;\n               }\n              }\n              }); \n\n  }\n\n  onSubmit(){\n    this.location.back();\n\n  }\n  isFieldValid(field: string) {\n    return !this.layoutForm.get(field).valid && this.layoutForm.get(field).touched;\n  }\n\n  displayFieldCss(field: string) {\n    return {\n      'has-error': this.isFieldValid(field),\n      'has-feedback': this.isFieldValid(field)\n    };\n  }\n\n\n  setGeoCordinates(){\n    this.lat = parseFloat(this.layoutForm.get('geoData.latitude').value);\n    this.long =parseFloat( this.layoutForm.get('geoData.longitude').value);\n  }\n  calculateTotalArea(){\n    let length =  parseFloat(this.layoutForm.get('geoData.length').value);\n    let width =  parseFloat(this.layoutForm.get('geoData.width').value);\n    let totalArea = length * width ; \n    if(!isNaN(totalArea)){\n    console.log(\"Total Area: \" + totalArea);\n     this.layoutForm.patchValue({'geoData' : {'totalArea' : totalArea}});\n    }\n  }\n  \n\n  fileChange(event) {\n    let fileList: FileList = event.target.files;\n    if (fileList.length > 0) {\n      let file: File = fileList[0];\n      let formData: FormData = new FormData();\n      formData.append('uploadFile', file, file.name);\n      console.log(\"file :\" + file);\n\n    }\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      console.log(field);\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-land-record/view-land-record.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}